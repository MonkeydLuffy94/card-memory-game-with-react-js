{"version":3,"sources":["Components/Card/batman.png","Components/Card/Card.js","Components/CardDeck.js","Components/TimeBar.js","Components/GameControlBar.js","Components/Dropdown.js","Components/SettingsModal.js","Components/MemoryGame.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Card","props","face","className","error","isFlipped","onClick","dataItem","src","batman","alt","CardDeck","rowNumber","colNumber","selectedCardIndex","viewFaces","createCard","i","key","createCardDeckRow","cardDeckRow","j","push","cardDeckComponent","createCardDeck","TimeBar","handleTimeIcon","timeRemainingString","timeRemaining","maxTime","id","value","max","GameControlbar","gameStatusInfo","handleGameControl","pairMatched","life","type","data-bs-toggle","data-bs-target","Dropdown","name","label","options","onChange","map","option","SettingsModal","handleDropdown","handleTheme","boardRowOptions","boardColOptions","themeOptions","currentTheme","tabIndex","data-bs-dismiss","aria-label","e","actualCardFaces","concat","element","index","shuffle","array","length","Math","floor","random","cardNumberOptions","MemoryGame","state","flippedForMatch","clickedCardIndex","undefined","gameStatus","handleTime","console","log","setState","handleClick","cardFaces","JSON","parse","stringify","cardFace","find","card","isGameEnd","forEach","viewFace","renderLifeList","lifeArray","target","isRowChange","getAttribute","newColNumber","newRowNumber","halfNumberCards","newBoardColOptions","filter","col","newBoardRowOptions","prevProps","prevState","snapshot","this","setTimeout","prevGameStatus","prevTimeRemaining","timeID","setInterval","clearInterval","root","document","documentElement","style","setProperty","toLocaleLowerCase","React","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.e2683399.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/batman.bd83c4a2.png\";","import React from \"react\";\r\nimport \"./style.css\";\r\nimport batman from \"./batman.png\";\r\n\r\nconst Card = props => {\r\n  const { face } = props;\r\n  const isClicked = () => {\r\n    return face.isFlipped ? \"isClicked\" : \"\";\r\n  };\r\n\r\n  const cardErrorClass = () => {\r\n    const { error } = props;\r\n    return error ? `scene-error` : \"\";\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`scene ${cardErrorClass()} d-flex justify-content-center align-items-center rounded-3 m-2`}\r\n    >\r\n      <div\r\n        className={`card ${isClicked()} position-relative`}\r\n        onClick={props.onClick}\r\n      >\r\n        <div className=\"card-face face-front position-absolute w-100 h-100 rounded-3 text-center\">\r\n          {face.dataItem}\r\n        </div>\r\n        <div className=\"card-face face-back position-absolute w-100 h-100 rounded-3 text-center\">\r\n          <img className=\"rounded-3\" src={batman} alt=\"Front\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport Card from \"./Card/Card\";\r\n\r\nconst CardDeck = ({\r\n  rowNumber,\r\n  colNumber,\r\n  error,\r\n  selectedCardIndex,\r\n  onClick,\r\n  viewFaces,\r\n}) => {\r\n  const createCard = i => {\r\n    const findErrorCard = () => {\r\n      return error && selectedCardIndex === i;\r\n    };\r\n    return (\r\n      <Card\r\n        key={`card${i}`}\r\n        onClick={() => onClick(i)}\r\n        face={viewFaces[i]}\r\n        error={findErrorCard()}\r\n      />\r\n    );\r\n  };\r\n\r\n  const createCardDeckRow = i => {\r\n    const cardDeckRow = [];\r\n    for (let j = 0; j < colNumber; j++) {\r\n      cardDeckRow.push(createCard(i + j));\r\n    }\r\n    return cardDeckRow;\r\n  };\r\n\r\n  const createCardDeck = () => {\r\n    const cardDeckComponent = [];\r\n    for (let i = 0; i < rowNumber; i++) {\r\n      cardDeckComponent.push(\r\n        <div\r\n          className=\"card-deck-row d-flex justify-content-center align-items-center\"\r\n          key={`row-${i}`}\r\n        >\r\n          {createCardDeckRow(colNumber * i)}\r\n        </div>\r\n      );\r\n    }\r\n    return cardDeckComponent;\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`card-deck card-deck-${rowNumber}-${colNumber} d-flex flex-column align-items-center justify-content-center rounded-3 p-2`}\r\n    >\r\n      {createCardDeck()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardDeck;\r\n","import React from \"react\";\r\n\r\nconst TimeBar = ({\r\n  handleTimeIcon,\r\n  timeRemainingString,\r\n  timeRemaining,\r\n  maxTime,\r\n}) => {\r\n  return (\r\n    <div className=\"time-bar row mb-3\">\r\n      <div className=\"col\">\r\n        <i className={`${handleTimeIcon()}`}></i>\r\n      </div>\r\n      <div className=\"col position-relative d-flex align-items-center\">\r\n        <span className=\"mb-0 position-absolute top-0 translate-top\">\r\n          {timeRemainingString}\r\n        </span>\r\n        <progress\r\n          id=\"timebar\"\r\n          className={`${timeRemaining === maxTime ? \"time-full\" : \"\"}`}\r\n          value={timeRemaining}\r\n          max={maxTime}\r\n        ></progress>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeBar;\r\n","import React from \"react\";\r\n\r\nconst GameControlbar = ({gameStatusInfo, handleGameControl, pairMatched, life}) => {\r\n  return (\r\n    <div className=\"status d-flex flex-md-column justify-content-between align-items-center justify-content-md-between align-items-md-center p-3\">\r\n      <div className=\"game-control d-flex flex-column justify-content-center align-items-center\">\r\n        <p className=\"mb-1\">{gameStatusInfo()}</p>\r\n        <button type=\"submit\" onClick={() => handleGameControl()}>\r\n          <i className=\"fas fa-play\"></i>\r\n        </button>\r\n      </div>\r\n\r\n      <p className=\"point\">\r\n        Point:{\" \"}\r\n        {\r\n          pairMatched * 10 - (5 - life) * 5\r\n          /*10 points for each matching pait, -5 points for each error*/\r\n        }\r\n      </p>\r\n      <div\r\n        className=\"settings\"\r\n        data-bs-toggle=\"modal\"\r\n        data-bs-target=\"#settings-modal\"\r\n      >\r\n        <i className=\"fas fa-cog\"></i>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GameControlbar;\r\n","import React from \"react\";\r\n\r\nconst Dropdown = (props) => {\r\n  const { name, label, value, options } = props;\r\n  return (\r\n    <div className={name}>\r\n      <label>\r\n        {label}\r\n        <select value={value} onChange={props.onChange} name={name}>\r\n          {options.map((option) => (\r\n            <option value={option} key={\"row\" + option}>\r\n              {option}\r\n            </option>\r\n          ))}\r\n        </select>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dropdown;\r\n","import React from \"react\";\r\nimport Dropdown from \"./Dropdown\";\r\n\r\nconst SettingsModal = ({\r\n  handleDropdown,\r\n  handleTheme,\r\n  boardRowOptions,\r\n  rowNumber,\r\n  boardColOptions,\r\n  colNumber,\r\n  themeOptions,\r\n  currentTheme,\r\n}) => {\r\n  return (\r\n    <div className=\"modal\" id=\"settings-modal\" tabIndex=\"-1\">\r\n      <div className=\"modal-dialog\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Modal title</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"board-control\">\r\n              <Dropdown\r\n                label=\"Pick row number: \"\r\n                name=\"row-options\"\r\n                options={boardRowOptions}\r\n                value={rowNumber}\r\n                onChange={e => handleDropdown(e)}\r\n              />\r\n              <Dropdown\r\n                label=\"Pick column number: \"\r\n                name=\"col-options\"\r\n                options={boardColOptions}\r\n                value={colNumber}\r\n                onChange={e => handleDropdown(e)}\r\n              />\r\n              <Dropdown\r\n                label=\"Choose theme: \"\r\n                name=\"theme\"\r\n                options={themeOptions}\r\n                value={currentTheme}\r\n                onChange={e => handleTheme(e)}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SettingsModal;\r\n","import React from \"react\";\r\nimport CardDeck from \"./CardDeck\";\r\nimport Timebar from \"./TimeBar\";\r\nimport GameControlbar from \"./GameControlBar\";\r\nimport SettingsModal from \"./SettingsModal\";\r\n\r\nimport \"./theme.css\";\r\n\r\nconst actualCardFaces = [1, 2, 3, 4, 5, 6, 7, 8];\r\n\r\nlet viewFaces = actualCardFaces.concat(actualCardFaces);\r\n\r\nviewFaces = viewFaces.map((element, index) => {\r\n  return {\r\n    id: index,\r\n    dataItem: element,\r\n    isFlipped: true,\r\n  };\r\n});\r\n\r\nconst shuffle = array => {\r\n  for (let i = array.length - 1; i > 0; i--) {\r\n    let j = Math.floor(Math.random() * (i + 1));\r\n    [array[i], array[j]] = [array[j], array[i]];\r\n  }\r\n};\r\n\r\nshuffle(viewFaces);\r\n\r\nconst defaultRowNumber = 4;\r\nconst defaultColNumber = 4;\r\nconst cardNumberOptions = [3, 4, 5, 6];\r\nconst defaultTimeRemaining = 100;\r\nconst defaultTheme = \"Cyan\";\r\n\r\nconst GAME_PRE_START = \"GAME_PRE_START\";\r\nconst GAME_START_UNFLIPPED = \"GAME_START_UNFLIPPED\";\r\nconst GAME_MIDDLE_FLIPPED = \"GAME_MIDDLE_FLIPPED\";\r\nconst GAME_END = \"GAME_END\";\r\n\r\nclass MemoryGame extends React.Component {\r\n  state = {\r\n    viewFaces: viewFaces,\r\n    rowNumber: defaultRowNumber,\r\n    colNumber: defaultColNumber,\r\n    flippedForMatch: false,\r\n    clickedCardIndex: undefined,\r\n    pairMatched: 0,\r\n    error: false,\r\n    life: 5,\r\n    gameStatus: GAME_PRE_START,\r\n    boardRowOptions: cardNumberOptions,\r\n    boardColOptions: cardNumberOptions,\r\n    timeRemaining: defaultTimeRemaining,\r\n    themeOptions: [\"Blue\", \"Dark\", \"Bright\", \"Cyan\", \"Brick\"],\r\n    currentTheme: defaultTheme,\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState, snapshot) {\r\n    const { error, clickedCardIndex, gameStatus, currentTheme } = this.state;\r\n\r\n    // for card flipping with click.........................\r\n\r\n    if (error) {\r\n      const cardFaces = JSON.parse(JSON.stringify(this.state.viewFaces));\r\n      cardFaces[clickedCardIndex].isFlipped = true;\r\n      setTimeout(\r\n        () => this.setState(() => ({ viewFaces: cardFaces, error: false })),\r\n        900\r\n      );\r\n    }\r\n    //....................................................................\r\n\r\n    //controlling game life cycle.........................................\r\n    const { gameStatus: prevGameStatus } = prevState;\r\n\r\n    console.log(\"current status: \", gameStatus);\r\n    console.log(\"previous status: \", prevGameStatus);\r\n\r\n    if (gameStatus === GAME_START_UNFLIPPED) {\r\n      console.log(\"game status: \", GAME_START_UNFLIPPED);\r\n      let viewFaces = JSON.parse(JSON.stringify(this.state.viewFaces));\r\n\r\n      viewFaces.forEach(viewFace => {\r\n        viewFace.isFlipped = true;\r\n      });\r\n\r\n      setTimeout(\r\n        () =>\r\n          this.setState(() => ({\r\n            viewFaces: viewFaces,\r\n            gameStatus: GAME_MIDDLE_FLIPPED,\r\n          })),\r\n        5000\r\n      );\r\n    }\r\n\r\n    // end game when life ends and starting timebar when game starts\r\n\r\n    if (gameStatus === GAME_MIDDLE_FLIPPED) {\r\n      const { life, timeRemaining } = this.state;\r\n      const { timeRemaining: prevTimeRemaining } = prevState;\r\n      console.log(\r\n        \"previous time remaining................:   \",\r\n        prevTimeRemaining\r\n      );\r\n      console.log(\"current time remaining................:   \", timeRemaining);\r\n      if (timeRemaining !== 0) {\r\n        if (prevGameStatus === GAME_START_UNFLIPPED) {\r\n          this.timeID = setInterval(() => this.handleTime(), 1000);\r\n        }\r\n      } else {\r\n        clearInterval(this.timeID);\r\n        this.setState(() => ({\r\n          gameStatus: GAME_END,\r\n        }));\r\n      }\r\n\r\n      if (life === 0) {\r\n        clearInterval(this.timeID);\r\n        this.setState(() => ({ gameStatus: GAME_END }));\r\n      }\r\n    }\r\n\r\n    // ...........................................................................\r\n\r\n    if (gameStatus === GAME_END) {\r\n      clearInterval(this.timeID);\r\n    }\r\n\r\n    // Theme update.....................................\r\n\r\n    let root = document.documentElement;\r\n\r\n    if (currentTheme === \"Blue\") {\r\n      root.style.setProperty(\"--primary\", \"#6b9080\");\r\n      root.style.setProperty(\"--secondary\", \"#a4c3b2\");\r\n      root.style.setProperty(\"--light-tone\", \"#eaf4f4\");\r\n      root.style.setProperty(\"--lighter-tone\", \"#f6fff8\");\r\n      root.style.setProperty(\"--error-color\", \"red\");\r\n    } else if (currentTheme === \"Dark\") {\r\n      root.style.setProperty(\"--primary\", \"#0b0b0d\");\r\n      root.style.setProperty(\"--secondary\", \"#474a56\");\r\n      root.style.setProperty(\"--light-tone\", \"#929aab\");\r\n      root.style.setProperty(\"--lighter-tone\", \"#d3d5fd\");\r\n      root.style.setProperty(\"--error-color\", \"red\");\r\n    } else if (currentTheme === \"Bright\") {\r\n      root.style.setProperty(\"--primary\", \"#f60c86\");\r\n      root.style.setProperty(\"--secondary\", \"#11cbd7\");\r\n      root.style.setProperty(\"--light-tone\", \"#9feed1\");\r\n      root.style.setProperty(\"--lighter-tone\", \"#9feed1\");\r\n      root.style.setProperty(\"--error-color\", \"#11cbd7\");\r\n    } else if (currentTheme === \"Cyan\") {\r\n      root.style.setProperty(\"--primary\", \"#006c9a\");\r\n      root.style.setProperty(\"--secondary\", \"#00bebe\");\r\n      root.style.setProperty(\"--light-tone\", \"#00f3e4\");\r\n      root.style.setProperty(\"--lighter-tone\", \"#9ff9c1\");\r\n      root.style.setProperty(\"--error-color\", \"red\");\r\n    } else {\r\n      root.style.setProperty(\"--primary\", \"#031f41\");\r\n      root.style.setProperty(\"--secondary\", \"#1b1b2f57\");\r\n      root.style.setProperty(\"--light-tone\", \" #963041\");\r\n      root.style.setProperty(\"--lighter-tone\", \"#1f4068\");\r\n      root.style.setProperty(\"--error-color\", \"#d6475f\");\r\n    }\r\n  }\r\n\r\n  handleTime = () => {\r\n    const { timeRemaining } = this.state;\r\n    console.log(\"Inside timebar function\");\r\n    this.setState(() => ({\r\n      timeRemaining: timeRemaining - 1,\r\n    }));\r\n  };\r\n\r\n  handleClick = i => {\r\n    const cardFaces = JSON.parse(JSON.stringify(this.state.viewFaces));\r\n    const cardFace = cardFaces[i];\r\n    const { flippedForMatch, gameStatus, life } = this.state;\r\n    if (gameStatus === GAME_MIDDLE_FLIPPED) {\r\n      if (flippedForMatch && cardFace.isFlipped) {\r\n        const cardFaceMatched = cardFaces.find(card => {\r\n          if (\r\n            card.id !== cardFace.id &&\r\n            !card.isFlipped &&\r\n            card.dataItem === cardFace.dataItem\r\n          ) {\r\n            cardFace.isFlipped = false;\r\n            const { rowNumber, colNumber, pairMatched } = this.state;\r\n\r\n            //finding the number of pair already matched before next pair match: to find all the cards\r\n            // have been flipped or not\r\n            const isGameEnd = pairMatched === (rowNumber * colNumber) / 2 - 1;\r\n            ////////////////\r\n\r\n            this.setState(() => ({\r\n              viewFaces: cardFaces,\r\n              flippedForMatch: false,\r\n              pairMatched: pairMatched + 1,\r\n              error: false,\r\n              clickedCardIndex: i,\r\n              gameStatus: isGameEnd ? GAME_END : GAME_MIDDLE_FLIPPED,\r\n            }));\r\n            return true;\r\n          }\r\n\r\n          return false;\r\n        });\r\n\r\n        if (!cardFaceMatched) {\r\n          cardFace.isFlipped = false;\r\n          this.setState(() => ({\r\n            viewFaces: cardFaces,\r\n            error: true,\r\n            clickedCardIndex: i,\r\n            life: life - 1,\r\n          }));\r\n        }\r\n      } else {\r\n        cardFace.isFlipped = false;\r\n        this.setState(() => ({\r\n          viewFaces: cardFaces,\r\n          flippedForMatch: true,\r\n          clickedCardIndex: i,\r\n        }));\r\n      }\r\n    }\r\n  };\r\n\r\n  handleGameControl = () => {\r\n    const { gameStatus } = this.state;\r\n    if (gameStatus === GAME_PRE_START || gameStatus === GAME_END) {\r\n      let viewFaces = JSON.parse(JSON.stringify(this.state.viewFaces));\r\n      viewFaces.forEach(viewFace => {\r\n        viewFace.isFlipped = false;\r\n      });\r\n\r\n      shuffle(viewFaces);\r\n\r\n      this.setState(() => ({\r\n        viewFaces: viewFaces,\r\n        gameStatus: GAME_START_UNFLIPPED,\r\n        pairMatched: 0,\r\n        flippedForMatch: false,\r\n        clickedCardIndex: undefined,\r\n        error: false,\r\n        life: 5,\r\n        timeRemaining: defaultTimeRemaining,\r\n      }));\r\n    }\r\n  };\r\n\r\n  gameStatusInfo = () => {\r\n    const { gameStatus } = this.state;\r\n    return gameStatus === GAME_PRE_START\r\n      ? \"Start Game\"\r\n      : gameStatus === GAME_START_UNFLIPPED\r\n      ? \"Remember the Cards\"\r\n      : gameStatus === GAME_MIDDLE_FLIPPED\r\n      ? \"Flip and Match the Cards\"\r\n      : \"Game over! play again?\";\r\n  };\r\n\r\n  renderLifeList = life => {\r\n    let lifeArray = [];\r\n    for (let i = 0; i < life; i += 1) {\r\n      lifeArray.push(\r\n        <li className=\"px-2\" key={i}>\r\n          <i className=\"far fa-heart\"></i>\r\n        </li>\r\n      );\r\n    }\r\n\r\n    return lifeArray;\r\n  };\r\n\r\n  handleDropdown = e => {\r\n    const {\r\n      rowNumber,\r\n      colNumber,\r\n      gameStatus,\r\n      boardColOptions,\r\n      boardRowOptions,\r\n    } = this.state;\r\n\r\n    if (gameStatus === GAME_PRE_START || gameStatus === GAME_END) {\r\n      const value = e.target.value;\r\n\r\n      const targetName = e.target.getAttribute(\"name\");\r\n\r\n      const isRowChange = targetName === \"row-options\";\r\n\r\n      const newColNumber = isRowChange ? colNumber : value;\r\n      const newRowNumber = isRowChange ? value : rowNumber;\r\n\r\n      const halfNumberCards = (newColNumber * newRowNumber) / 2;\r\n      let actualCardFaces = [];\r\n      for (let i = 0; i < halfNumberCards; i++) {\r\n        actualCardFaces.push(i);\r\n      }\r\n\r\n      let viewFaces = actualCardFaces.concat(actualCardFaces);\r\n\r\n      viewFaces = viewFaces.map((element, index) => {\r\n        return {\r\n          id: index,\r\n          dataItem: element,\r\n          isFlipped: true,\r\n        };\r\n      });\r\n\r\n      const shuffle = array => {\r\n        for (let i = array.length - 1; i > 0; i--) {\r\n          let j = Math.floor(Math.random() * (i + 1));\r\n          [array[i], array[j]] = [array[j], array[i]];\r\n        }\r\n      };\r\n\r\n      shuffle(viewFaces);\r\n\r\n      let newBoardColOptions = isRowChange\r\n        ? cardNumberOptions.filter(col => {\r\n            return value % 2 === 0 ? true : col % 2 === 0 ? true : false;\r\n          })\r\n        : boardColOptions;\r\n\r\n      let newBoardRowOptions = !isRowChange\r\n        ? cardNumberOptions.filter(col => {\r\n            return value % 2 === 0 ? true : col % 2 === 0 ? true : false;\r\n          })\r\n        : boardRowOptions;\r\n\r\n      this.setState(() => ({\r\n        viewFaces: viewFaces,\r\n        rowNumber: newRowNumber,\r\n        colNumber: newColNumber,\r\n        boardColOptions: newBoardColOptions,\r\n        boardRowOptions: newBoardRowOptions,\r\n      }));\r\n    }\r\n  };\r\n\r\n  handleTimeIcon = () => {\r\n    const { gameStatus } = this.state;\r\n    const iconClass =\r\n      gameStatus === GAME_PRE_START || gameStatus === GAME_START_UNFLIPPED\r\n        ? \"fas fa-hourglass-start\"\r\n        : gameStatus === GAME_MIDDLE_FLIPPED\r\n        ? \"far fa-hourglass game-started\"\r\n        : \"fas fa-hourglass-end\";\r\n    return iconClass;\r\n  };\r\n\r\n  handleTheme = e => {\r\n    const value = e.target.value;\r\n    this.setState(() => ({ currentTheme: value }));\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      rowNumber,\r\n      colNumber,\r\n      viewFaces,\r\n      error,\r\n      pairMatched,\r\n      clickedCardIndex,\r\n      life,\r\n      boardColOptions,\r\n      boardRowOptions,\r\n      timeRemaining,\r\n      gameStatus,\r\n      themeOptions,\r\n      currentTheme,\r\n    } = this.state;\r\n    console.log(\"rendering\");\r\n    return (\r\n      <div\r\n        className={`memory-game-wrapper ${currentTheme.toLocaleLowerCase()}-theme d-flex flex-column flex-md-row vh-100`}\r\n      >\r\n        <GameControlbar\r\n          gameStatusInfo={this.gameStatusInfo}\r\n          handleGameControl={this.handleGameControl}\r\n          pairMatched={pairMatched}\r\n          life={life}\r\n        />\r\n        <div className=\"card-deck-wrapper container d-flex flex-column align-items-center w-100 mt-5\">\r\n          <Timebar\r\n            handleTimeIcon={this.handleTimeIcon}\r\n            timeRemainingString={\r\n              gameStatus === GAME_MIDDLE_FLIPPED ? `${timeRemaining}s` : \"\"\r\n            }\r\n            timeRemaining={timeRemaining}\r\n            maxTime={defaultTimeRemaining}\r\n          />\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <CardDeck\r\n                rowNumber={rowNumber}\r\n                colNumber={colNumber}\r\n                onClick={i => this.handleClick(i)}\r\n                viewFaces={viewFaces}\r\n                error={error}\r\n                selectedCardIndex={clickedCardIndex}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n              <div className=\"score\">\r\n                <ul className=\"life-list list-unstyled d-flex py-3\">\r\n                  {this.renderLifeList(life)}\r\n                </ul>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <SettingsModal\r\n          handleDropdown={this.handleDropdown}\r\n          handleTheme={this.handleTheme}\r\n          boardRowOptions={boardRowOptions}\r\n          rowNumber={rowNumber}\r\n          boardColOptions={boardColOptions}\r\n          colNumber={colNumber}\r\n          themeOptions={themeOptions}\r\n          currentTheme={currentTheme}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MemoryGame;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport MemoryGame from \"./Components/MemoryGame\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <MemoryGame />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}